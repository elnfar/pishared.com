// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Tenant {
  id               String     @id @default(dbgenerated("concat('tnt_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  name             String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  stripeCustomerId String?
  plan             Plan       @default(FREE)
  expirationDate   DateTime? // NULL -> means no expiration
  inviteKey        String     @unique @default(dbgenerated("replace(cast(gen_random_uuid() as text), '-', '')")) @db.Text
  users            User[]
  conversions        Conversion[]
}

model User {
  id         String     @id @default(dbgenerated("concat('usr_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  email      String     @unique
  name       String?
  avatar     String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  tenantId   String
  tenant     Tenant     @relation(fields: [tenantId], references: [id])
  conversions  Conversion[]
}




enum Status {
  PENDING
  PROCESSING
  DONE
  ERROR
}

model Conversion {
    id               String     @id @default(dbgenerated("concat('tnt_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
    s3Key String
    status Status
    error String?
    createdAt        DateTime   @default(now())
    updatedAt        DateTime   @updatedAt
    tenantId   String?
    tenant Tenant? @relation(fields: [tenantId],references: [id])
    userId String?
    user User? @relation(fields: [userId],references: [id])

}


enum Plan {
  FREE
  PRO
}

model ActivationToken {
  id Int @id @default(autoincrement())
  token String @unique
  activatedAt DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}